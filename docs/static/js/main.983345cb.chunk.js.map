{"version":3,"sources":["components/AddCategory.js","components/helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifts.js","App.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","getGif","category","a","cat","encodeURI","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","App","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAkCeA,EA9BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAerC,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAC,OAAKP,GAAL,mBAAoBO,OACnCN,EAAc,MAIlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAhBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAM,uCAAG,WAAOC,GAAP,yBAAAC,EAAA,6DACdC,EAAMC,UAAUH,GACdI,EAFY,iDAEoCF,EAFpC,+DAGCG,MAAOD,GAHR,cAGZE,EAHY,gBAIGA,EAAKC,OAJR,uBAIXC,EAJW,EAIXA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QAVxB,kBAaXK,GAbW,4CAAH,sDCYJO,EAVK,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IAE7B,OACI,sBAAKa,UAAU,0CAAf,UACI,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,4BAAIA,QCmBDO,MAtBf,YAA8B,IAAZpB,EAAW,EAAXA,SAAW,ECAA,SAACA,GAAc,IAAD,EAEbd,mBAAS,CAC/BsB,KAAK,GACLa,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAmBvC,OAXAC,qBAAU,WACNzB,EAAOC,GACFyB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAGrB,CAACrB,IAGGsB,EDjBwBK,CAAc3B,GAAjCc,EAFa,EAElBN,KAAaa,EAFK,EAELA,QAEpB,OACI,qCACI,oBAAIJ,UAAU,qCAAd,SAAqDjB,IACnDqB,GAAW,mBAAGJ,UAAU,oCAAb,sBAEb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEMtBgB,MAnBf,WAAgB,IAAD,EAEuB1C,mBAAS,CAAC,cAFjC,mBAEN2C,EAFM,KAEM5C,EAFN,KAIb,OACE,qCACE,2CACA,cAAC,EAAD,CACEA,cAAeA,IAEjB,uBAEA,6BACG4C,EAAWnB,KAAI,SAAAhB,GAAC,OAAI,cAAC,EAAD,CAAiBM,SAAUN,GAAbA,YCZ3CoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.983345cb.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from \"prop-types\";\n\n\nconst AddCategory = ({setCategories}) => {\n    \n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories(c => [inputValue, ...c]);\n            setInputValue('');\n        }\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>  \n    );\n}\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n}\n\n\nexport default AddCategory;\n","export const getGif = async (category) => {\n    let cat = encodeURI(category);\n    const url = `https://api.giphy.com/v1/gifs/search?q=${cat}&limit=10&api_key=j6iQjVyH86jL4dj0dmeOSrgKP0WPIRbp`\n    const resp = await fetch( url );\n    const {data} = await resp.json();\n    \n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n    return gifs;\n}","import React from 'react';\n\nconst GifGridItem = ({id, title, url}) => {\n    \n    return (\n        <div className=\"card animate__animated  animate__fadeIn\">\n            <img src={url} alt={title} />\n            <p>{title}</p>            \n        </div>\n    );\n}\n\nexport default GifGridItem;\n","import React from \"react\";\nimport { useFetchGifts } from \"../hooks/useFetchGifts\";\nimport Item from './GifGridItem';\n\nfunction GifGrid({category}) {\n\n    const {data:images, loading} = useFetchGifts(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated  animate__fadeIn\">{ category }</h3>\n            { loading && <p className=\"animate__animated  animate__flash\">Cargando</p> }\n\n            <div className=\"card-grid\">\n                {\n                    images.map(img => (\n                        <Item \n                            key={img.id} \n                            {...img}\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\nexport default GifGrid;","import {useEffect, useState} from 'react';\nimport {getGif} from '../components/helpers/getGifs';\n\n\nexport const useFetchGifts = (category) => {\n\n    const [state, setState] = useState({\n        data:[],\n        loading: true\n    });\n\n    \n    useEffect(() => {\n        getGif(category)\n            .then( imgs => {\n                setState({\n                    data:imgs,\n                    loading:false\n                })\n            })\n    }, [category])\n\n\n    return state;\n}","import { useState } from \"react\";\nimport AddCategory from \"./components/AddCategory\";\nimport GifGrid from './components/GifGrid';\n\nfunction App() {\n  \n  const [categories, setCategories] = useState(['One punch']);\n\n  return (\n    <>\n      <h2>GifExpert</h2>\n      <AddCategory \n        setCategories={setCategories}\n      />\n      <hr />\n      \n      <ol>\n        {categories.map(c => <GifGrid key={c} category={c} /> )}\n      </ol>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}